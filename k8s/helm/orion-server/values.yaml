
prefectVersionTag: 2.0b3-python3.8

api:
  # Default values for Orion API.
  enabled: true
  service:
    type: ClusterIP
    port: 4200

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: prefect.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

  replicaCount: 1
  # -- API image
  image:
    name: prefecthq/prefect
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 2.0b3-python3.8

  debug_enabled: false
  # -- Horizontal Pod Autoscaler confiuration
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
# -- Postgres configuration
postgresql:
  postgresqlDatabase: prefect

  # postgresqlUsername defines the username to authenticate
  # with.
  # NOTE: If you are using Azure, this will include an '@'
  # which must be encoded as '%40' for the connection string
  # to work with both Hasura, the GraphQL server, and the
  # Alembic migration manager
  postgresqlUsername: prefect

  # existingSecret configures which secret should be referenced
  # for access to the database. If null and `useSubChart` is
  # enabled, the secret will be generated. If using an external
  # postgres service, this value should be set to the name of 
  # an existing Kubernetes secret. This secret must contain 
  # a key-value pair where the key is `postgresql-password `
  # and the value is your password. For more information, 
  # see the "Database" section of the README.
  existingSecret: null

  # postgresqlPassword sets the password to be used if
  # `existingSecret` is not set. This is the password for
  # `postgresqlUsername` and will be set within the secret at
  # the key `postgresql-password`. This argument is only relevant 
  # when using the Postgres database included in the chart. 
  # For an external postgres connection, you must create
  # and use `existingSecret` instead of `postgresqlPassword`.
  postgresqlPassword: ""

  # servicePort configures the port that the database should be
  # accessed at
  servicePort: 5432

  # externalHostname defines the address to contact an externally
  # managed postgres database instance at. This is not required if
  # `internalPostgres` is `true`
  externalHostname: ""

  # useSubChart determines if a this chart should deploy a
  # user-manager postgres database or use an externally managed
  # postgres instance. If `useSubChart` is `true`, the
  # bitnami/postgresql subchart will be deployed
  useSubChart: true

  # postgresql configuration below here is only used if using
  # the subchart

  # persistence enables a PVC that stores the database between
  # deployments. If making changes to the database deployment, this
  # PVC will need to be deleted for database changes to take effect.
  # This is especially notable when the authentication password
  # changes on redeploys.
  # This is disabled by default because we do not recommend using
  # the subchart deployment for production deployments.
  persistence:
    # -- Enables a PVC that stores db between deployments
    enabled: false
    # -- Configures size of postgres PVC
    size: 8Gi

  # -- initial postgres user to create
  initdbUser: postgres

  image:
    # -- Version tag, corresponds to tags at https://hub.docker.com/r/bitnami/postgresql/
    tag: 14.3.0


serviceAccount:
   enabled: true

jobs:
  createWorkQueue:
    enabled: false
    annotations: {}
    image:
      name: prefecthq/prefect
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: 2.0b3-python3.8
      PullSecrets: []




imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
annotations: {}